{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,KAAMF,SAASC,cAAc,aAC7BE,MAAOH,SAASC,cAAc,kBAC9BG,KAAMJ,SAASC,cAAc,iBAC7BI,OAAQL,SAASC,cAAc,oBAMjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAEH,WAAUJ,S,GAEpBA,E,IAZPL,EAAKC,KAAKgB,MAAMC,gBAAkB,UAClClB,EAAKI,KAAKe,iBAAiB,SAe3B,SAAyBC,GACvBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaC,OAAOvB,EAAKK,MAAMmB,OAC/BlB,EAAOiB,OAAOvB,EAAKM,KAAKkB,OACxBjB,EAASgB,OAAOvB,EAAKO,OAAOiB,OAEvBC,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAAG,CAGnCjB,EAAciB,EAFKH,EAAahB,EAAOmB,GAGpCC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MACjBP,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MAClBP,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  body: document.querySelector('body'),\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.body.style.backgroundColor = '#f7eff4';\nrefs.form.addEventListener('click', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n\n  let valueDelay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let promiseDelay = valueDelay + step * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","body","document","querySelector","form","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","style","backgroundColor","addEventListener","event","preventDefault","valueDelay","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c794cf72.js.map"}